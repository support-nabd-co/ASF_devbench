version: '3.8'

services:
  # ASF Devbench Manager Application (Flask Version)
  devbench-app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: devbench-manager
    restart: unless-stopped
    ports:
      - "8082:3001"
    environment:
      # Flask Configuration
      - FLASK_ENV=production
      - SECRET_KEY=${SECRET_KEY:-dev-secret-key-change-in-production-make-it-long-and-random}
      - PORT=3001
      
      # Database Configuration - Using in-memory SQLite for testing
      - "DATABASE_URL=sqlite:///:memory:"
      
      # Admin Configuration - Use ASF_TB as default to match .env.flask
      - ADMIN_PASSWORD=${ADMIN_PASSWORD:-ASF_TB}
      
      # Domain Configuration
      - DOMAIN=${DOMAIN:-tbm.asf.nabd-co.com}
      - SSL_EMAIL=${SSL_EMAIL:-your-email@example.com}
      
      # VM Provisioning
      - PROVISION_SCRIPT_PATH=./provision_vm.sh
    volumes:
      # Mount environment file if it exists
      - ./.env:/app/.env:ro
      # Mount provision script to make it accessible
      - ./provision_vm.sh:/app/provision_vm.sh:ro
    networks:
      - openproject_openproject_network  # Join OpenProject network so Caddy can reach us
      - default  # Keep default network for other services if needed
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

# Note: This configuration works with your existing Caddy reverse proxy
# Update your Caddyfile to point tbm.asf.nabd-co.com to devbench-manager:3001

# Use external network that OpenProject and Caddy are already on
networks:
  openproject_openproject_network:
    external: true
