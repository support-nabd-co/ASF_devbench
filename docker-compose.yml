version: '3.8'

services:
  # Main Devbench Manager Application
  devbench-app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: devbench-manager
    restart: unless-stopped
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=production
      - PORT=3001
      - JWT_SECRET=${JWT_SECRET:-your-super-secret-jwt-key-change-in-production}
      - FIREBASE_CONFIG=${FIREBASE_CONFIG}
      - APP_ID=${APP_ID:-devbench-app}
    volumes:
      # Mount environment file if it exists
      - ./.env:/app/.env:ro
    networks:
      - devbench-network
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:3001/api/health', (res) => { process.exit(res.statusCode === 200 ? 0 : 1) })"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: devbench-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
      - ./ssl:/etc/nginx/ssl:ro
      - /var/log/nginx:/var/log/nginx
    depends_on:
      - devbench-app
    networks:
      - devbench-network

  # Certbot for SSL certificates (optional)
  certbot:
    image: certbot/certbot
    container_name: devbench-certbot
    volumes:
      - ./ssl:/etc/letsencrypt
      - ./nginx/html:/var/www/html
    command: certonly --webroot --webroot-path=/var/www/html --email your-email@example.com --agree-tos --no-eff-email -d tbm.asf.nabd-co.com
    profiles:
      - ssl

networks:
  devbench-network:
    driver: bridge

volumes:
  ssl-certs:
    driver: local
